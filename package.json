{
	"name": "vscode-janet",
	"displayName": "Janet",
	"description": "Janet language support for Visual Studio Code",
	"icon": "images/icon.png",
	"version": "0.0.2",
	"publisher": "janet-lang",
	"repository": "https://github.com/janet-lang/vscode-janet",
	"engines": {
		"vscode": "^1.34.0"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:janet",
		"onCommand:janet.startREPL",
		"onCommand:janet.eval",
		"onCommand:janet.evalFile",
		"onCommand:janet.formatFile"
	],
	"main": "./out/extension.js",
	"contributes": {
		"languages": [
			{
				"id": "janet",
				"aliases": [
					"Janet",
					"janet"
				],
				"extensions": [
					".janet"
				],
				"configuration": "./janet.configuration.json"
			}
		],
		"grammars": [
			{
				"language": "janet",
				"scopeName": "source.janet",
				"path": "./syntaxes/janet.tmLanguage"
			}
		],
		"configurationDefaults": {
			"[janet]": {
				"editor.wordSeparators": "\t ()\"':,;~@#$%^&{}[]`",
				"editor.autoClosingBrackets": "always",
				"editor.autoClosingQuotes": "always",
				"editor.formatOnType": true,
				"editor.autoIndent": "full",
				"editor.formatOnPaste": true,
				"files.trimTrailingWhitespace": false,
				"editor.matchBrackets": "never",
				"editor.guides.indentation": false,
				"editor.parameterHints.enabled": false,
				"editor.unicodeHighlight.allowedCharacters": {
					" ": true,
					"꞉": true
				}
			}
		},
		"configuration": [
			{
				"type": "object",
				"title": "Janet",
				"properties": {
					"janet.keybindingsEnabled": {
						"type": "boolean",
						"description": "Activate keybindings.",
						"default": true,
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Janet Paredit",
				"properties": {
					"janet.paredit.defaultKeyMap": {
						"type": "string",
						"description": "The default keymap to use for bindings when there is no custom binding.",
						"default": "strict",
						"enum": [
							"original",
							"strict",
							"none"
						],
						"scope": "window"
					},
					"janet.paredit.hijackVSCodeDefaults": {
						"type": "boolean",
						"markdownDescription": "When enabled, more VS Code built-in shortcuts are overridden with their ”corresponding” Paredit commands.",
						"default": true,
						"scope": "window"
					},
					"janet.paredit.strictPreventUnmatchedClosingBracket": {
						"type": "boolean",
						"markdownDescription": "Experimental: Prevents you from entering unmatched closing brackets when in `strict` mode. (Does not work when there is an active selection.)",
						"default": false,
						"scope": "window"
					},
					"janet.paredit.killAlsoCutsToClipboard": {
						"type": "boolean",
						"markdownDescription": "When enabled, replaces the clipboard content with the deleted code.",
						"default": false,
						"scope": "window"
					}
				}
			},
			{
				"title": "Janet Calva-fmt",
				"type": "object",
				"properties": {
					"janet.calva.fmt.configPath": {
						"type": "string",
						"markdownDescription": "Path to [cljfmt](https://github.com/weavejester/cljfmt#configuration) configuration file. Absolute or relative to the project root directory. To provide the config via [clojure-lsp](https://clojure-lsp.io), set this to `CLOJURE-LSP` (case sensitive)."
					},
					"janet.calva.fmt.formatAsYouType": {
						"type": "boolean",
						"default": true,
						"description": "Auto-adjust indentation and format as you enter new lines."
					},
					"janet.calva.fmt.newIndentEngine": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Use the structural editor for indentation (instead of `cljfmt`)."
					},
					"janet.calva.fmt.keepCommentTrailParenOnOwnLine": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Treat `(comment...)` forms special and keep its closing paren on a line of its own."
					}
				}
			}
		],
		"commands": [
			{
				"command": "janet.startREPL",
				"title": "Janet: Start REPL"
			},
			{
				"command": "janet.eval",
				"title": "Janet: Evaluate expression"
			},
			{
				"command": "janet.evalFile",
				"title": "Janet: Evaluate file"
			},
			{
				"command": "janet.formatFile",
				"title": "Janet: Format file"
			},
			{
				"command": "janet.continueComment",
				"title": "Continue Comment (add a commented line below).",
				"category": "Janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.togglemode",
				"title": "Toggle Paredit Mode",
				"when": "editorLangId == janet && paredit:keyMap =~ /original|strict/",
				"enablement": "editorLangId == janet && paredit:keyMap =~ /original|strict/"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.forwardSexp",
				"title": "Move Cursor Forward Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.backwardSexp",
				"title": "Move Cursor Backward Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.forwardSexpOrUp",
				"title": "Move Cursor Forward or Up Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.backwardSexpOrUp",
				"title": "Move Cursor Backward or Up Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.forwardDownSexp",
				"title": "Move Cursor Forward Down Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.backwardDownSexp",
				"title": "Move Cursor Backward Down Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.backwardUpSexp",
				"title": "Move Cursor Backward Up Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.forwardUpSexp",
				"title": "Move Cursor Forward Up Sexp/Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.closeList",
				"title": "Move Cursor Forward to List End/Close",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectForwardSexp",
				"title": "Select Forward Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectRight",
				"title": "Select Right",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectBackwardSexp",
				"title": "Select Backward Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectForwardDownSexp",
				"title": "Select Forward Down Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectBackwardDownSexp",
				"title": "Select Backward Down Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectBackwardUpSexp",
				"title": "Select Backward Up Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectForwardUpSexp",
				"title": "Select Forward Up Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectBackwardSexpOrUp",
				"title": "Select Backward Or Up Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectForwardSexpOrUp",
				"title": "Select Forward Or Up Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectCloseList",
				"title": "Select Forward to List End/Close",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.selectOpenList",
				"title": "Select Backward to List Start/Open",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.rangeForDefun",
				"title": "Select Current Top Level (aka defun) Form",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.sexpRangeExpansion",
				"title": "Expand Selection",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.sexpRangeContraction",
				"title": "Shrink Selection",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.slurpSexpForward",
				"title": "Slurp Sexp Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.slurpSexpBackward",
				"title": "Slurp Sexp Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.barfSexpForward",
				"title": "Barf Sexp Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.barfSexpBackward",
				"title": "Barf Sexp Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.spliceSexp",
				"title": "Splice Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.splitSexp",
				"title": "Split Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.joinSexp",
				"title": "Join Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.raiseSexp",
				"title": "Raise Sexp",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.transpose",
				"title": "Transpose (Swap) the two Sexps Around the Cursor",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.dragSexprBackward",
				"title": "Drag Sexp Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.dragSexprForward",
				"title": "Drag Sexp Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.dragSexprBackwardUp",
				"title": "Drag Sexp Backward Up",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.dragSexprForwardDown",
				"title": "Drag Sexp Forward Down",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.dragSexprForwardUp",
				"title": "Drag Sexp Forward Up",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.dragSexprBackwardDown",
				"title": "Drag Sexp Backward Down",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.convolute",
				"title": "Convolute Sexp ¯\\_(ツ)_/¯",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.killRight",
				"title": "Kill/Delete Right",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.killSexpForward",
				"title": "Kill/Delete Sexp Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.killSexpBackward",
				"title": "Kill/Delete Sexp Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.killListForward",
				"title": "Kill/Delete Forward to End of List",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.killListBackward",
				"title": "Kill/Delete Backward to Start of List",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.spliceSexpKillForward",
				"title": "Splice & Kill/Delete Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.spliceSexpKillBackward",
				"title": "Splice & Kill/Delete Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.deleteForward",
				"title": "Delete Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.deleteBackward",
				"title": "Delete Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.forceDeleteForward",
				"title": "Force Delete Forward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.forceDeleteBackward",
				"title": "Force Delete Backward",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.wrapAroundParens",
				"title": "Wrap Around ()",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.wrapAroundSquare",
				"title": "Wrap Around []",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.wrapAroundCurly",
				"title": "Wrap Around {}",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.wrapAroundQuote",
				"title": "Wrap Around \"\"",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.rewrapParens",
				"title": "Rewrap ()",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.rewrapSquare",
				"title": "Rewrap []",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.rewrapCurly",
				"title": "Rewrap {}",
				"enablement": "editorLangId == janet"
			},
			{
				"category": "Janet Paredit",
				"command": "janet.paredit.rewrapQuote",
				"title": "Rewrap \"\"",
				"enablement": "editorLangId == janet"
			},
			{
				"command": "janet.calva-fmt.formatCurrentForm",
				"title": "Format Current Form",
				"category": "Janet Format",
				"enablement": "editorLangId == janet"
			},
			{
				"command": "janet.calva-fmt.alignCurrentForm",
				"title": "Format and Align Current Form (recursively, experimental)",
				"category": "Janet Format",
				"enablement": "editorLangId == janet"
			},
			{
				"command": "janet.calva-fmt.trimCurrentFormWhiteSpace",
				"title": "Format Current Form and trim space between forms",
				"category": "Janet Format",
				"enablement": "editorLangId == janet"
			},
			{
				"command": "janet.calva-fmt.inferParens",
				"title": "Infer Parens (from the indentation)",
				"category": "Janet Format",
				"enablement": "editorLangId == janet"
			},
			{
				"command": "janet.calva-fmt.tabIndent",
				"title": "Indent Line",
				"category": "Janet Format",
				"enablement": "editorLangId == janet"
			},
			{
				"command": "janet.calva-fmt.tabDedent",
				"title": "Dedent Line",
				"category": "Janet Format",
				"enablement": "editorLangId == janet"
			}
		],
		"keybindings": [
			{
				"command": "janet.eval",
				"key": "alt+e",
				"when": "editorLangId == janet && janet:keybindingsEnabled"
			},
			{
				"command": "janet.evalFile",
				"key": "alt+l",
				"when": "editorLangId == janet && janet:keybindingsEnabled"
			},
			{
				"command": "janet.paredit.togglemode",
				"key": "ctrl+alt+p ctrl+alt+m",
				"when": "editorLangId == janet && janet:keybindingsEnabled && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.backwardSexp",
				"mac": "ctrl+left",
				"win": "alt+left",
				"linux": "alt+left",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && !config.janet.paredit.hijackVSCodeDefaults && !janet:cursorInComment || janet:cursorBeforeComment"
			},
			{
				"command": "janet.paredit.backwardSexp",
				"mac": "alt+left",
				"win": "ctrl+left",
				"linux": "ctrl+left",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && config.janet.paredit.hijackVSCodeDefaults && !janet:cursorInComment || janet:cursorBeforeComment"
			},
			{
				"command": "janet.paredit.forwardSexp",
				"mac": "ctrl+right",
				"win": "alt+right",
				"linux": "alt+right",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && !config.janet.paredit.hijackVSCodeDefaults && !janet:cursorInComment || janet:cursorAfterComment"
			},
			{
				"command": "janet.paredit.forwardSexp",
				"mac": "alt+right",
				"win": "ctrl+right",
				"linux": "ctrl+right",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && config.janet.paredit.hijackVSCodeDefaults && !janet:cursorInComment || janet:cursorAfterComment"
			},
			{
				"command": "janet.paredit.forwardDownSexp",
				"key": "ctrl+down",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.backwardDownSexp",
				"key": "ctrl+alt+up",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.forwardUpSexp",
				"key": "ctrl+alt+down",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.backwardUpSexp",
				"key": "ctrl+up",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.closeList",
				"key": "ctrl+end",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.openList",
				"key": "ctrl+home",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectForwardSexp",
				"mac": "shift+alt+right",
				"win": "shift+ctrl+right",
				"linux": "shift+ctrl+right",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectRight",
				"mac": "ctrl+shift+k",
				"win": "ctrl+k ctrl+shift+k",
				"linux": "ctrl+k ctrl+shift+k",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !selectionAnchorSet && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectBackwardSexp",
				"mac": "shift+alt+left",
				"win": "shift+ctrl+left",
				"linux": "shift+ctrl+left",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectForwardDownSexp",
				"key": "ctrl+shift+down",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectBackwardDownSexp",
				"key": "ctrl+shift+alt+up",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectForwardUpSexp",
				"key": "ctrl+shift+alt+down",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectBackwardUpSexp",
				"key": "ctrl+shift+up",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectCloseList",
				"key": "ctrl+shift+end",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.selectOpenList",
				"key": "ctrl+shift+home",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.rangeForDefun",
				"key": "ctrl+alt+w space",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.sexpRangeExpansion",
				"mac": "ctrl+w",
				"win": "shift+alt+right",
				"linux": "shift+alt+right",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.sexpRangeContraction",
				"mac": "ctrl+shift+w",
				"win": "shift+alt+left",
				"linux": "shift+alt+left",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.slurpSexpForward",
				"key": "ctrl+alt+win+right",
				"linux": "ctrl+alt+.",
				"when": "janet:keybindingsEnabled && editorLangId == janet"
			},
			{
				"command": "janet.paredit.slurpSexpBackward",
				"key": "ctrl+alt+win+left",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.barfSexpForward",
				"key": "ctrl+alt+shift+left",
				"linux": "ctrl+alt+,",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.barfSexpBackward",
				"key": "ctrl+alt+shift+right",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.spliceSexp",
				"key": "ctrl+alt+s",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.splitSexp",
				"key": "ctrl+shift+s",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.joinSexp",
				"key": "ctrl+shift+j",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.raiseSexp",
				"key": "ctrl+alt+p ctrl+alt+r",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.transpose",
				"key": "ctrl+alt+t",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.dragSexprBackward",
				"key": "ctrl+shift+alt+b",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.dragSexprForward",
				"key": "ctrl+shift+alt+f",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.dragSexprBackward",
				"key": "alt+up",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && config.janet.paredit.hijackVSCodeDefaults && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.dragSexprForward",
				"key": "alt+down",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/ && config.janet.paredit.hijackVSCodeDefaults && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.dragSexprBackwardUp",
				"key": "ctrl+shift+alt+u",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.dragSexprForwardDown",
				"key": "ctrl+shift+alt+d",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.dragSexprForwardUp",
				"key": "ctrl+shift+alt+k",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.dragSexprBackwardDown",
				"key": "ctrl+shift+alt+j",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.convolute",
				"key": "ctrl+shift+c",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.killRight",
				"mac": "ctrl+k",
				"win": "ctrl+k ctrl+k",
				"linux": "ctrl+k ctrl+k",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !selectionAnchorSet && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.killSexpForward",
				"key": "ctrl+shift+delete",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.killSexpBackward",
				"key": "ctrl+alt+backspace",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.killListForward",
				"key": "ctrl+delete",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.killListBackward",
				"key": "ctrl+backspace",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.spliceSexpKillForward",
				"key": "ctrl+alt+shift+delete",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.spliceSexpKillBackward",
				"key": "ctrl+alt+shift+backspace",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.wrapAroundParens",
				"key": "ctrl+alt+shift+p",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.wrapAroundSquare",
				"key": "ctrl+alt+shift+s",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.wrapAroundCurly",
				"key": "ctrl+alt+shift+c",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.wrapAroundQuote",
				"key": "ctrl+alt+shift+q",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.rewrapParens",
				"key": "ctrl+alt+r ctrl+alt+p",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.rewrapSquare",
				"key": "ctrl+alt+r ctrl+alt+s",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.rewrapCurly",
				"key": "ctrl+alt+r ctrl+alt+c",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.rewrapQuote",
				"key": "ctrl+alt+r ctrl+alt+q",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap =~ /original|strict/"
			},
			{
				"command": "janet.paredit.deleteForward",
				"key": "delete",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap == strict && !editorReadOnly && !editorHasMultipleSelections && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.deleteBackward",
				"key": "backspace",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap == strict && !editorReadOnly && !editorHasMultipleSelections && !janet:cursorInComment"
			},
			{
				"command": "janet.paredit.forceDeleteForward",
				"key": "alt+delete",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap == strict && !editorReadOnly && !editorHasMultipleSelections"
			},
			{
				"command": "janet.paredit.forceDeleteBackward",
				"key": "alt+backspace",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && paredit:keyMap == strict && !editorReadOnly && !editorHasMultipleSelections"
			},
			{
				"command": "janet.continueComment",
				"key": "enter",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && janet:cursorInComment"
			},
			{
				"command": "janet.calva-fmt.formatCurrentForm",
				"key": "tab",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !editorReadOnly && !inSnippetMode && !suggestWidgetVisible && !hasOtherSuggestions && !inSnippetMode && !inlineSuggestionVisible"
			},
			{
				"command": "janet.calva-fmt.alignCurrentForm",
				"key": "ctrl+alt+l",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
			},
			{
				"command": "janet.calva-fmt.inferParens",
				"key": "ctrl+alt+p i",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
			},
			{
				"command": "janet.calva-fmt.tabIndent",
				"key": "ctrl+i",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
			},
			{
				"command": "janet.calva-fmt.tabDedent",
				"key": "shift+tab",
				"when": "janet:keybindingsEnabled && editorLangId == janet && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint . --ext .ts,.tsx",
		"watch": "tsc -watch -p ./"
	},
	"dependencies": {
		"@types/universal-analytics": "^0.4.2",
		"immutable": "3.8.1",
		"immutable-cursor": "2.0.1",
		"lodash": "^4.17.19",
		"lodash.isequal": "4.5.0",
		"parinfer": "^3.12.0",
		"universal-analytics": "^0.5.3",
		"uuidv4": "6.2.12"
	},
	"devDependencies": {
		"@types/node": "^12.12.0",
		"@types/vscode": "^1.34.0",
		"@typescript-eslint/eslint-plugin": "^4.16.0",
		"@typescript-eslint/parser": "^4.16.0",
		"eslint": "^7.21.0",
		"source-map-support": "^0.5.21",
		"typescript": "^4.7.4"
	}
}
